package Matrix;

public class Matrix4 {
	double[] values;
	Matrix4(double[]values)
	{
		this.values=values;
	}
	public Matrix4 multiply(Matrix4 other)
	{
		double[] result = new double[16];
		for (int row=0; row<4; row++)
			for (int col=0; col<4; col++)
				for (int i=0; i<4; i++)
		result[row*4 + col] += this.values[row*4 + i] * other.values[i*4 + col];
		
		return new Matrix4(result);
	}
	public Matrix4 add(Matrix4 other)
	{
		double[] result = new double[16];
		for (int row=0; row<4; row++)
			for (int col=0; col<4; col++)
				result[row*4 + col] += other.values[row*4 + col];
		
		return new Matrix4(result);
	}
	public Matrix4 subtract(Matrix4 other)
	{
		double[] result = new double[16];
		for (int row=0; row<4; row++)
			for (int col=0; col<4; col++)
				result[row*4 + col] = result[row*4 + col] - other.values[row*4 + col];
		return new Matrix4(result);
	}
	public static Matrix4 identityMatrix4()
	{
		return new Matrix4(new double[] {
				1, 0, 0, 0,
				0, 1, 0, 0,
				0, 0, 1, 0,
				0, 0, 0, 1
		});
	}
	public static Matrix4 zeroMatrix4()
	{
		return new Matrix4(new double[] {
				0, 0, 0, 0,
				0, 0, 0, 0,
				0, 0, 0, 0,
				0, 0, 0, 0
		});
	}
	
	public static Matrix4 rotateAroundXMatrix(double angle)
	{
		return new Matrix4(new double[] {
				
		});
	}
}
